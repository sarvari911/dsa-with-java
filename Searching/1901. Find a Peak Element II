class Solution {

    public int findMaxInCol(int[][] arr, int col, int n){
        int maxVal = Integer.MIN_VALUE;
        int idx = -1;

        for(int i = 0; i < n; i++){
            if(arr[i][col] > maxVal){
                maxVal = arr[i][col];
                idx = i;
            }
        }
        
        return idx;

    }
    public int[] findPeakGrid(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;

        int ans[] = new int[2];
        Arrays.fill(ans, -1);

        int low = 0;
        int high = m-1;

        while(low <= high){
            int mid = low + (high-low)/2;

            int idx = findMaxInCol(mat, mid , n);

            int leftVal = (mid > 0)? mat[idx][mid - 1] :Integer.MIN_VALUE; 
            int rightVal = (mid < m-1)? mat[idx][mid + 1] : Integer.MIN_VALUE;
            int val = mat[idx][mid];
            if(val > leftVal && val > rightVal){
                ans[0] = idx;
                ans[1] = mid;
                return ans;
            } else if (val < leftVal){
                high = mid - 1;
            } else{
                low = mid + 1;
            }
        }
        return ans;
    }
}
